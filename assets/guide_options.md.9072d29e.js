import{o as n,a as s,i as a}from"./app.546c24d5.js";const t='{"title":"Options","description":"","frontmatter":{},"headers":[{"level":2,"title":"options prop","slug":"options-prop"},{"level":2,"title":"globalOptions prop","slug":"globaloptions-prop"},{"level":2,"title":"Option Attributes","slug":"option-attributes"},{"level":3,"title":"bounds","slug":"bounds"},{"level":3,"title":"debug","slug":"debug"},{"level":3,"title":"formats","slug":"formats"},{"level":3,"title":"modules","slug":"modules"},{"level":3,"title":"placeholder","slug":"placeholder"},{"level":3,"title":"readOnly","slug":"readonly"},{"level":3,"title":"scrollingContainer","slug":"scrollingcontainer"},{"level":3,"title":"theme","slug":"theme"}],"relativePath":"guide/options.md","lastUpdated":1617706672503}',o={},e=a('<h1 id="options"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h1><p>Use <code>options</code> prop or/and <code>globalOptions</code> prop to configure Quill.</p><h2 id="options-prop"><a class="header-anchor" href="#options-prop" aria-hidden="true">#</a> options prop</h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Only use <code>options</code> prop when you register QuillEditor component locally</p></div><ul><li><p><strong>Usage:</strong></p><div class="language-javascript"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> QuillEditor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueup/vue-quill&#39;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;@vueup/vue-quill/dist/vue-quill.snow.css&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  components<span class="token operator">:</span> <span class="token punctuation">{</span>\n    QuillEditor\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> \n      options<span class="token operator">:</span> <span class="token punctuation">{</span>\n        debug<span class="token operator">:</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">,</span>\n        modules<span class="token operator">:</span> <span class="token punctuation">{</span>\n          toolbar<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;bold&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;italic&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;underline&#39;</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        placeholder<span class="token operator">:</span> <span class="token string">&#39;Compose an epic...&#39;</span><span class="token punctuation">,</span>\n        readOnly<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        theme<span class="token operator">:</span> <span class="token string">&#39;snow&#39;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div></li><li><p><strong>In your template:</strong></p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>QuillEditor</span> <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>options<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div></li></ul><h2 id="globaloptions-prop"><a class="header-anchor" href="#globaloptions-prop" aria-hidden="true">#</a> globalOptions prop</h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Only use <code>globalOptions</code> prop when you register the QuillEditor component globally</p></div><ul><li><p><strong>Usage:</strong></p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> QuillEditor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueup/vue-quill&#39;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment">// define your options</span>\n<span class="token keyword">const</span> globalOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n  debug<span class="token operator">:</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">,</span>\n  modules<span class="token operator">:</span> <span class="token punctuation">{</span>\n    toolbar<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;bold&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;italic&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;underline&#39;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  placeholder<span class="token operator">:</span> <span class="token string">&#39;Compose an epic...&#39;</span><span class="token punctuation">,</span>\n  readOnly<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  theme<span class="token operator">:</span> <span class="token string">&#39;snow&#39;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// set default globalOptions prop</span>\nQuillEditor<span class="token punctuation">.</span>props<span class="token punctuation">.</span>globalOptions<span class="token punctuation">.</span><span class="token function-variable function">default</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> globalOptions\n<span class="token comment">// register QuillEditor component</span>\napp<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;QuillEditor&#39;</span><span class="token punctuation">,</span> QuillEditor<span class="token punctuation">)</span>\n</code></pre></div></li></ul><h2 id="option-attributes"><a class="header-anchor" href="#option-attributes" aria-hidden="true">#</a> Option Attributes</h2><h3 id="bounds"><a class="header-anchor" href="#bounds" aria-hidden="true">#</a> bounds</h3><ul><li><p><strong>Default:</strong> <code>document.body</code></p><p>DOM Element or a CSS selector for a DOM Element, within which the editorâ€™s UI elements (i.e. tooltips, etc.) should be confined. Currently, it only considers left and right boundaries.</p></li></ul><h3 id="debug"><a class="header-anchor" href="#debug" aria-hidden="true">#</a> debug</h3><ul><li><p><strong>Default:</strong> <code>warn</code></p><p>Shortcut for debugging. Note debug is a static method and will affect other instances of Quill editors on the page. Only warning and error messages are enabled by default.</p></li></ul><h3 id="formats"><a class="header-anchor" href="#formats" aria-hidden="true">#</a> formats</h3><ul><li><p><strong>Default:</strong> <code>All formats</code></p><p>Whitelist of formats to allow in the editor. See <a href="https://quilljs.com/docs/formats/" target="_blank" rel="noopener noreferrer">Formats</a> for a complete list.</p></li></ul><h3 id="modules"><a class="header-anchor" href="#modules" aria-hidden="true">#</a> modules</h3><p>Collection of modules to include and respective options. See <a href="https://quilljs.com/docs/modules/" target="_blank" rel="noopener noreferrer">Modules</a> for more information.</p><h3 id="placeholder"><a class="header-anchor" href="#placeholder" aria-hidden="true">#</a> placeholder</h3><ul><li><p><strong>Default:</strong> <code>None</code></p><p>Placeholder text to show when the editor is empty.</p></li></ul><h3 id="readonly"><a class="header-anchor" href="#readonly" aria-hidden="true">#</a> readOnly</h3><ul><li><p><strong>Default:</strong> <code>false</code></p><p>Whether to instantiate the editor to read-only mode.</p></li></ul><h3 id="scrollingcontainer"><a class="header-anchor" href="#scrollingcontainer" aria-hidden="true">#</a> scrollingContainer</h3><ul><li><p><strong>Default:</strong> <code>null</code></p><p>DOM Element or a CSS selector for a DOM Element, specifying which container has the scrollbars (i.e. overflow-y: auto), if is has been changed from the default ql-editor with custom CSS. Necessary to fix scroll jumping bugs when Quill is set to auto grow its height, and another ancestor container is responsible for the scrolling.</p></li></ul><h3 id="theme"><a class="header-anchor" href="#theme" aria-hidden="true">#</a> theme</h3><p>Name of a theme to use. The built-in options are <code>bubble</code> or <code>snow</code>. An invalid or falsy value will load a default minimal theme. Note the themeâ€™s specific stylesheet still needs to be included manually. See <a href="./themes.html">Themes</a> for more information.</p>',25);o.render=function(a,t,o,p,l,c){return n(),s("div",null,[e])};export default o;export{t as __pageData};
