import{o as e,a as o,i as t}from"./app.d24aec02.js";const n='{"title":"Props","description":"","frontmatter":{},"headers":[{"level":2,"title":"v-model:content","slug":"v-model-content"},{"level":2,"title":"content","slug":"content"},{"level":2,"title":"contentType","slug":"contenttype"},{"level":2,"title":"enable","slug":"enable"},{"level":2,"title":"readOnly","slug":"readonly"},{"level":2,"title":"placeholder","slug":"placeholder"},{"level":2,"title":"theme","slug":"theme"},{"level":2,"title":"toolbar","slug":"toolbar"},{"level":2,"title":"modules","slug":"modules"},{"level":2,"title":"options","slug":"options"},{"level":2,"title":"globalOptions","slug":"globaloptions"}],"relativePath":"api/index.md","lastUpdated":1625281497403}',a={},s=t('<h1 id="props"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h1><h2 id="v-model-content"><a class="header-anchor" href="#v-model-content" aria-hidden="true">#</a> v-model:content</h2><ul><li><p><strong>Type:</strong> <code>Delta | String</code></p></li><li><p><strong>Default:</strong> <code>{}</code></p></li><li><p><strong>Return:</strong> <code>Delta</code></p><p>Two-way binding editor content, can be <code>Delta</code> object, plain <code>text</code>, or <code>html</code> string, see <a href="https://quilljs.com/docs/delta/" target="_blank" rel="noopener noreferrer">Quill Delta docs</a> for more details.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Your content and content type must match, if you want to use <code>html</code> as your content you must set your <code>contentType</code> to <code>html</code>, as well as <code>text</code>.</p></div></li></ul><h2 id="content"><a class="header-anchor" href="#content" aria-hidden="true">#</a> content</h2><ul><li><p><strong>Type:</strong> <code>Delta | String</code></p></li><li><p><strong>Default:</strong> <code>{}</code></p><p>Contents for the editor, can be <code>Delta</code> object, plain <code>text</code>, or <code>html</code> string, see <a href="https://quilljs.com/docs/delta/" target="_blank" rel="noopener noreferrer">Quill Delta docs</a> for more details.</p></li></ul><h2 id="contenttype"><a class="header-anchor" href="#contenttype" aria-hidden="true">#</a> contentType</h2><ul><li><p><strong>Type:</strong> <code>&quot;delta&quot; | &quot;html&quot; | &quot;text&quot;</code></p></li><li><p><strong>Default:</strong> <code>delta</code></p><p>VueQuill supports three content type <code>delta</code>, <code>html</code>, and <code>text</code>, and make sure to set contentType if you want to use <code>html</code> or plain <code>text</code> as your content.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Use <code>delta</code> (default value) content type to prevent issues and is the best practice.</p></div></li></ul><h2 id="enable"><a class="header-anchor" href="#enable" aria-hidden="true">#</a> enable</h2><ul><li><p><strong>Type:</strong> <code>Boolean</code></p></li><li><p><strong>Default:</strong> <code>true</code></p><p>Set ability for user to edit, via input devices like the mouse or keyboard.</p></li></ul><h2 id="readonly"><a class="header-anchor" href="#readonly" aria-hidden="true">#</a> readOnly</h2><ul><li><p><strong>Type:</strong> <code>Boolean</code></p></li><li><p><strong>Default:</strong> <code>false</code></p><p>If <em>true</em>, the editor won&#39;t allow changing its contents. Wraps the Quill <a href="https://quilljs.com/docs/api/#disable" target="_blank" rel="noopener noreferrer"><code>disable</code> API</a>.</p></li></ul><h2 id="placeholder"><a class="header-anchor" href="#placeholder" aria-hidden="true">#</a> placeholder</h2><ul><li><p><strong>Type:</strong> <code>String</code></p><p>The attribute to specifies a short hint that describes the expected value of an input field (e.g. a sample value or a short description of the expected format).</p></li></ul><h2 id="theme"><a class="header-anchor" href="#theme" aria-hidden="true">#</a> theme</h2><ul><li><p><strong>Type:</strong> <code>&quot;snow&quot; | &quot;bubble&quot; | &quot;&quot;</code></p></li><li><p><strong>Default:</strong> <code>&quot;snow&quot;</code></p><p>The name of the theme to apply to the editor, Quill features two officially supported themes: <code>snow</code> and <code>bubble</code>. Pass <code>&quot;&quot;</code> to use the minimal core theme. See the <a href="https://quilljs.com/docs/themes/" target="_blank" rel="noopener noreferrer">docs on themes</a> for more information on including the required stylesheets.</p></li></ul><h2 id="toolbar"><a class="header-anchor" href="#toolbar" aria-hidden="true">#</a> toolbar</h2><ul><li><p><strong>Type:</strong> <code>String | Array | Object</code></p><p>Toolbar options to configure the default toolbar icons using an array of format names, see <a href="./../guide/toolbar.html">Toolbar</a> section for more details.</p></li></ul><h2 id="modules"><a class="header-anchor" href="#modules" aria-hidden="true">#</a> modules</h2><ul><li><p><strong>Type:</strong> <code>Object | Object[]</code></p><p>Options to register modules, see <a href="./../guide/modules.html">Modules</a> section for more details.</p></li></ul><h2 id="options"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h2><ul><li><p><strong>Type:</strong> <code>Object</code></p><p>Options to configure Quill, see <a href="./../guide/options.html">the docs options</a> for more details</p></li></ul><h2 id="globaloptions"><a class="header-anchor" href="#globaloptions" aria-hidden="true">#</a> globalOptions</h2><ul><li><p><strong>Type:</strong> <code>Object</code></p><p>Global Options to configure Quill, see <a href="./../guide/options.html">the docs options</a> for more details</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Only use <code>globalOptions</code> when you register QuillEditor component globally</p></div></li><li><p><strong>Usage:</strong></p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> QuillEditor <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueup/vue-quill&#39;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment">// define your options</span>\n<span class="token keyword">const</span> globalOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n  debug<span class="token operator">:</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">,</span>\n  modules<span class="token operator">:</span> <span class="token punctuation">{</span>\n    toolbar<span class="token operator">:</span> <span class="token string">&#39;minimal&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  placeholder<span class="token operator">:</span> <span class="token string">&#39;Compose an epic...&#39;</span><span class="token punctuation">,</span>\n  readOnly<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  theme<span class="token operator">:</span> <span class="token string">&#39;snow&#39;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// set default globalOptions prop</span>\nQuillEditor<span class="token punctuation">.</span>props<span class="token punctuation">.</span>globalOptions<span class="token punctuation">.</span><span class="token function-variable function">default</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> globalOptions\n<span class="token comment">// register QuillEditor component</span>\napp<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;QuillEditor&#39;</span><span class="token punctuation">,</span> QuillEditor<span class="token punctuation">)</span>\n</code></pre></div></li></ul>',23);a.render=function(t,n,a,l,p,r){return e(),o("div",null,[s])};export default a;export{n as __pageData};
